# * Вывести на экран эти цены через запятую в одну строку,
# цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»).
# Подумать, как из цены получить рубли и копейки, как добавить нули, если, например,
# получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# * Вывести цены, отсортированные по возрастанию, новый список не создавать
# (доказать, что объект списка после сортировки остался тот же).
# * Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# * Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

price = [57.8, 46.51, 97, 54.31, 88.7]
# перебираем список преобразуем его в строку и разделяем через split
end_price_list = []
for i in price:
    spl_price = str(i).split('.')
    # если кол-во списка равна 1 то мы приравнием то мы приравнием к rub список убрав его а к kop 0
    # если 2 объекта то к руб и коп и с помощью continue продолжаем цикл
    if len(spl_price) == 1:
        rub, kop = *spl_price, 0
    elif len(spl_price) == 2:
        rub, kop = spl_price
    else:
        continue
#         подсмотрел в видеоуроке else continue
#      возвращаем к типу int
    int_rub, int_kop = int(rub), int(kop)
#     приводим к общему значению и добавляем с новый список
    end_price = f'{int_rub} руб {int_kop:02d} коп'
    end_price_list.append(end_price)
print(', '.join(end_price_list))
print(id(end_price_list))
# Функция sort сортирует список по возрастанию не создавая новый список, но используя reverse=True наоборот
end_price_list.sort(reverse=True)
print(end_price_list)
print(id(end_price_list))
# sorted создает новый список вывожу и показываю черерз id
end_price_list = sorted(end_price_list)
print(end_price_list)
print(id(end_price_list))
# не стал еще раз переворачивать взял последние три
print(end_price_list[2:])